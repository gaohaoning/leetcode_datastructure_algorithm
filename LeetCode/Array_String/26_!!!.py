#!/usr/bin/env python
# coding:utf-8

"""
26. 删除排序数组中的重复项
难度
简单

给定一个排序数组，你需要在原地删除重复出现的元素，使得每个元素只出现一次，返回移除后数组的新长度。

不要使用额外的数组空间，你必须在原地修改输入数组并在使用 O(1) 额外空间的条件下完成。

示例 1:

给定数组 nums = [1,1,2],
函数应该返回新的长度 2, 并且原数组 nums 的前两个元素被修改为 1, 2。
你不需要考虑数组中超出新长度后面的元素。

示例 2:

给定 nums = [0,0,1,1,1,2,2,3,3,4],
函数应该返回新的长度 5, 并且原数组 nums 的前五个元素被修改为 0, 1, 2, 3, 4。
你不需要考虑数组中超出新长度后面的元素。


说明:
为什么返回数值是整数，但输出的答案是数组呢?
请注意，输入数组是以“引用”方式传递的，这意味着在函数里修改输入数组对于调用者是可见的。
你可以想象内部操作如下:

// nums 是以“引用”方式传递的。也就是说，不对实参做任何拷贝
int len = removeDuplicates(nums);

// 在函数里修改输入数组对于调用者是可见的。
// 根据你的函数返回的长度, 它会打印出数组中该长度范围内的所有元素。
for (int i = 0; i < len; i++) {
    print(nums[i]);
}
"""
# ================================================================================
"""
思路:
    逆序遍历，逐个删除重复元素。
    （正序遍历，则会发生删除元素后影响后续索引定位）
    （逆序遍历，可以防止删除元素后影响后续索引定位）
    缺点:
        每次删除数组元素会引发大量的数据迁移操作，所以不推荐!!!!!
时间复杂度:
    O(n)
空间复杂度: 
    O(1)
"""


class Solution(object):
    def removeDuplicates(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
        for i in range(len(nums) - 1, 0, -1):
            # print i
            if nums[i] == nums[i - 1]:
                del nums[i]
                pass
            pass
        return len(nums)

# ================================================================================
"""
思路:
    快慢指针:
        利用快慢指针，将不重复的元素，整理至数组的前 M 位（M 为不重复元素的个数，即:移除后数组的新长度）
    (基于题目条件: 你不需要考虑数组中超出新长度后面的元素)
时间复杂度:
    O(n)
空间复杂度: 
    O(1)
"""


class Solution(object):
    def removeDuplicates(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
        i = 0
        for j in range(1, len(nums)):
            if nums[i] == nums[j]:
                pass
            else:
                i += 1
                nums[i] = nums[j]
                pass
            pass
        return i + 1


# ================================================================================
# ================================================================================
# ================================================================================
# ================================================================================
# ================================================================================


n = [0,0,1,1,1,2,2,3,3,4]
print Solution().removeDuplicates(n)
print n

# 5
# [0, 1, 2, 3, 4]
# [0, 1, 2, 3, 4, 2, 2, 3, 3, 4]
