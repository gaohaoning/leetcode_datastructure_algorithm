#!/usr/bin/env python
# coding:utf-8

"""
67. 二进制求和

给定两个二进制字符串，返回他们的和（用二进制表示）。

输入为非空字符串且只包含数字 1 和 0。

示例 1:

输入: a = "11", b = "1"
输出: "100"
示例 2:

输入: a = "1010", b = "1011"
输出: "10101"
"""
# ================================================================================
"""
思路:
    
时间复杂度:
    O()
空间复杂度: 
    O()
"""

"""
知识点: 
'X' * n: 当 n 为 0 或 负数 时，结果为空字符串
"""


class Solution(object):
    def addBinary(self, a, b):
        """
        :type a: str
        :type b: str
        :rtype: str
        """
        """
        知识点: 
        'X' * n: 当 n 为 0 或 负数 时，结果为空字符串
        """
        # a 和 b 调整为等长字符串
        delta = len(a) - len(b)
        a = '0' * (-delta) + a
        b = '0' * delta + b
        #
        # 结果
        ret = ''
        # 进位标志
        carry = 0
        for i, j in zip(a[::-1], b[::-1]):
            if carry == 0:
                carry = 1 if i == j == '1' else 0
                ret = '1' + ret if i != j else '0' + ret
                pass
            else:
                # carry == 1
                if i == j == '0':
                    carry = 0
                    ret = '1' + ret
                    pass
                elif i != j:
                    carry = 1
                    ret = '0' + ret
                else:
                    carry = 1
                    ret = '1' + ret
                    pass
                pass
            # print ret
            pass
        return '1' + ret if carry == 1 else ret
# ================================================================================
# ================================================================================
# ================================================================================
# ================================================================================
# ================================================================================


so = Solution()
# a = "11010"
# b = "1011"
# a = "1111"
# b = "1111"
a = "1010"
b = "1011"
print so.addBinary(a, b)
